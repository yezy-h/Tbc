#include "ble.h"
#include "stm32f10x_usart.h"
#include "stm32f10x_gpio.h"
#include "..\..\APP\includes.h"

void ble_init(void)
{
    u8 data;
    GPIO_InitTypeDef GPIO_InitStructure;
    USART_InitTypeDef USART_InitStructure;
    if (BLE_USARTAPB == APB1)
    {
        RCC_APB2PeriphClockCmd(RCC_APBxPeriph_BLE_USART_IO | RCC_APB2Periph_AFIO,ENABLE);
        RCC_APB1PeriphClockCmd(RCC_APBxPeriph_BLE_USART,ENABLE);
    }
    else
    {
        RCC_APB2PeriphClockCmd(RCC_APBxPeriph_BLE_USART_IO | RCC_APBxPeriph_DEBUG_USART | RCC_APB2Periph_AFIO,ENABLE);
    }
    if (BLE_PinRemap == ENABLE)
    {  				 
        GPIO_PinRemapConfig(GPIO_Remap_USART2,ENABLE);
    }
    GPIO_InitStructure.GPIO_Pin = BLE_USART_TXD;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(BLE_USART_IO,&GPIO_InitStructure);

    GPIO_InitStructure.GPIO_Pin = BLE_USART_RXD;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(BLE_USART_IO,&GPIO_InitStructure);

    USART_InitStructure.USART_BaudRate = 115200;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None ;
    USART_InitStructure.USART_Mode = USART_Mode_Rx|USART_Mode_Tx;
    USART_Init(BLE_USART,&USART_InitStructure);
    data = data;
    data = BLE_USART->DR;
    data = BLE_USART->SR;
    USART_ITConfig(BLE_USART,USART_IT_RXNE,ENABLE);
    USART_Cmd(BLE_USART,ENABLE);

    OSTimeDly(OS_TICKS_PER_SEC * 2);
    while(1) {
        OSTimeDly(OS_TICKS_PER_SEC * 2);
        USART_SendData(BLE_USART, '0');
    }
}

